Emis Group Technical Assessment
===============================

First things first. Get a GitHub Account and get Git installed on this laptop. 

Signing up for GitHub
email: Johnleeper73@gmail.com
password: **************
username: johnleeper (no spaces)

Account now created. 

Now finding best way to install git and git bash
Done the installation though I suspect there is some setting up to do. 

	User@User-PC MINGW64 ~/Documents
	$ cd ..

	User@User-PC MINGW64 ~
	$ mkdir git

	User@User-PC MINGW64 ~
	$ cd git

	User@User-PC MINGW64 ~/git
	$ git init
	Initialized empty Git repository in C:/Users/User/git/.git/

	User@User-PC MINGW64 ~/git (master)
	$ git branch -M main

	User@User-PC MINGW64 ~/git (main)
	$
	
	User@User-PC MINGW64 ~/git (main)
	$ git remote add origin https://github.com/johnleeper/EmisAssessment.git


Further problems now include getting hold of the data from GitHub. 
I'm not sure of the parameters of the assessment but I'm assuming the program should get the data rather than it being manually downloaded before I run the program. 

This looks like I need requests.get() or something similar. 
Just took a look on GitHub. Rather than a single file, we are dealing with multiple files in a single folder. 
So the program needs to get a list of files in the folder and then loop through the list downloading each one. 
Actually it might be a matter of cloning it to my desktop. 

I've had a look and I still have the old notes on Git from Apak. 
Cloning seems to have worked.

	User@User-PC MINGW64 ~
	$ cd git

	User@User-PC MINGW64 ~/git (main)
	$ git clone https://github.com/emisgroup/exa-data-eng-assessment.git
	Cloning into 'exa-data-eng-assessment'...
	remote: Enumerating objects: 92, done.
	remote: Counting objects: 100% (92/92), done.
	remote: Compressing objects: 100% (18/18), done.
	remote: Total 92 (delta 77), reused 82 (delta 74), pack-reused 0
	Receiving objects: 100% (92/92), 8.03 MiB | 4.68 MiB/s, done.
	Resolving deltas: 100% (77/77), done.
	Updating files: 100% (80/80), done.

	User@User-PC MINGW64 ~/git (main)
	$ ls
	emis_data_parser.py  exa-data-eng-assessment/

	User@User-PC MINGW64 ~/git (main)
	$ cd exa-data-eng-assessment

	User@User-PC MINGW64 ~/git/exa-data-eng-assessment (main)
	$ ls
	README.md  data/

	User@User-PC MINGW64 ~/git/exa-data-eng-assessment (main)
	$ cd data

	User@User-PC MINGW64 ~/git/exa-data-eng-assessment/data (main)
	$ ls
	Aaron697_Dickens475_8c95253e-8ee8-9ae8-6d40-021d702dc78e.json
	Aaron697_Jerde200_6fa23508-960e-ff22-c3d0-0519a036543b.json
	Abbey813_Price929_83524678-9bff-93b7-ef89-d7f5390072ff.json
	Beth967_Hansen121_4e343b0a-8698-b6dd-64c6-c2d2d0959e6e.json
	Bette450_Anderson154_6e4ac285-2a8d-a30d-5ecb-e32cb595a876.json
	Bill567_Breitenberg711_1029f880-d3db-f477-9da3-f59c14ed22c6.json
	Blanch844_Kuhlman484_a18edb30-e93c-8e9b-8e6a-95a651a24a36.json
	Bob965_Mohr916_f406a4e8-821b-0c9a-c8ec-09ad0f1fe9c6.json
	Bobbi508_Beer512_b8c71fe0-e911-205e-19c3-b92e88e5b5a6.json
	Chase54_Crooks415_e5b7d947-da2b-9cf4-12a0-9eb2cf735330.json
	Chase54_Klocko335_b0478b4f-16f2-af38-d199-44db19304df2.json
	Chelsie189_Larson43_0f978b87-8054-e6d3-aa03-20e101ea37c0.json
	Cherie102_Reinger292_64cdd7b0-d5a5-ca8a-4b03-3db12d7534be.json
	Deedra511_Wilkinson796_cced3031-d98c-d870-5dce-f0086d8c7a34.json
	Deena887_Fahey393_7c4e1f8e-29e4-f88f-095a-aa6a9f55e6de.json
	Delbert384_Farrell962_91cf58f9-191c-3a49-a979-2ca64e52c369.json
	Delfina519_Murphy561_cf3ce382-cceb-1557-89ac-b751a9e0e65d.json
	Delia459_Beier427_1ba50d39-8105-69de-09de-c6d5358b3cb6.json
	Della552_Ratke343_b0f40536-9dc8-2ea0-0bbf-467a69f5e3ad.json
	Delmar187_Lesch175_6a15a792-ed41-e1f3-b942-3c2bd4a01ad6.json
	Eveline832_Volkman526_bdb76eef-1faf-1ed7-d1ff-553d7df26fb3.json
	Everett935_Littel644_8a3247d3-a54c-43f2-2c5d-a8f5e28ff588.json
	Everette494_Jerde200_7b3071eb-aacb-0596-d7b5-4abcb83ac2f0.json
	Evon528_Hayes766_ac00ac90-9af7-5b4f-aca4-8b1b9990fc1a.json
	Genevive999_Crist667_6dcdc387-88f9-758d-260c-4235ac7c269f.json
	Georgann131_Hansen121_839e7cf9-b7d6-da6c-70bb-c151bf5c1c61.json
	George991_Kassulke119_d8cb2b2b-fee1-36de-2e1e-0fda2ed1d991.json
	Georgiana151_Jacobi462_e94401de-18ad-e190-9113-ee5ff31b1439.json
	Georgianna701_Ledner144_e9200276-eb25-ac87-e3bf-31de7e8d0b1e.json
	Gilma310_Hahn503_0d55a582-07fe-a897-776c-3ab5e48cd457.json
	Giuseppe872_Haley279_0d7ad451-ac1b-dc0e-48bd-e0a8e1de4f15.json
	Glen190_Glover433_3d496c42-21f9-8e42-aa2b-d021a1b79d46.json
	Gonzalo160_Bañuelos542_720d476c-6392-bc86-3640-bf2ee18d071a.json
	Gus973_Windler79_09e292d4-f186-331c-ed95-c503acabc54e.json
	Hank686_Ritchie586_35b42dc6-fcb1-4a74-1d90-4213afe5b285.json
	Hans694_Fahey393_3635f0e6-d517-43f9-c4b2-61ea16a60fa3.json
	Hans694_Fritsch593_9ce2b3c9-0f19-e01b-d789-5cb0609583e6.json
	Hans694_Littel644_e7ffd26a-48e5-f10e-5565-2f4e8b09ee45.json
	Harland508_Hintz995_a57f2290-27ed-6117-2989-f42ef6d291ab.json
	Harold594_Grimes165_2d6c10cf-fade-6e45-0064-674792ff5ef1.json
	James276_Champlin946_4cef483d-6b1b-a284-b8fd-1de7f5aba0a4.json
	Jamey282_Hayes766_9c02362b-0a48-be5e-7296-e332e383ebd2.json
	Jan231_Tillman293_2a0033b8-bd24-be26-eb24-8d6d9616b74f.json
	Jan231_Weber641_fae4f7e3-622f-290c-068f-6d03e71dd5c9.json
	Jana258_Nikolaus26_9ebde11e-7248-e63c-25f9-4b793c3a5065.json
	Jane262_Strosin214_46b22d89-fe1a-3cf7-7ecb-b16c7390103f.json
	Kayce253_Gislason620_37905eb6-a01d-0e34-a274-27ada76d3ccc.json
	Kayce253_Johns824_b0bccf43-3bf5-217c-7315-9e44d106bb6b.json
	Kazuko67_Dibbert990_f8e9efe2-62db-29a2-46be-c72bad056ca8.json
	Kelli207_Crooks415_5310622a-3368-34f0-c14a-b992c71e7d59.json
	Leon728_Roberts511_67ae02d5-002b-6bba-1854-642eba13aa0f.json
	Leonardo412_Schuppe920_10bf6da8-ffa1-6913-a119-726634be754c.json
	Leonora414_Rogahn59_718f37a0-cb8f-fb74-03d3-c242033e7a81.json
	Les282_Fritsch593_aad9d04b-bb30-2f47-d5dd-888b3b7bd831.json
	Lesley194_Ebert178_6f1df156-8793-56a0-6df1-570bca4dcc07.json
	Lesli455_Champlin946_1d2875d4-f60d-df84-d3e1-12dbafa29bd4.json
	Lesli455_Prohaska837_126a7e7a-958b-428b-907d-f2aa4fd7236b.json
	Leslie90_Weissnat378_a8e9746e-f807-bbb1-bdc1-83ade842694d.json
	Loyd638_Hackett68_98ff843c-4be7-b0aa-cc4f-0462d049ecb8.json
	Loyd638_Russel238_0ae2b985-af6e-485e-f0c5-fe0006c366e3.json
	Loyd638_Wiza601_0ae69ba4-c609-45cc-f172-d55bac5df41e.json
	Luana867_Rath779_eb3007ac-5147-73e0-b6ad-20bbe8578a08.json
	Luanne915_Predovic534_d3406315-0e5e-e5e3-da71-b3c9802bd004.json
	Luciano237_Turcotte120_4f0dc4bc-9ada-c8dd-31dc-ffcfbe80e186.json
	Maria750_Hessel84_a5ad8c5e-69af-ffe9-4de1-6e099852ff7d.json
	Marian936_Gleason633_c7eef66d-c5b9-f4da-bf58-550a8077ded6.json
	Marianna323_Champlin946_f8c09661-fcd1-eeea-d61e-478109235532.json
	Mariano761_Patiño436_4878889a-9b4f-22fc-7060-ed9f5c05940c.json
	María_José279_Adorno791_aa4eae2c-733a-35f9-8869-d33a6015db23.json
	Rubi442_Labadie908_da6120a6-4557-7db3-b44c-43c38568c119.json
	Rubin812_Quigley282_ac56a3df-7399-e895-2a6e-6ae757f3f4a5.json
	Russell422_Walker122_4a627a30-b963-bd1c-58be-0499f24d9670.json
	Ruthie901_Mills423_c8c2969a-32d7-9694-ce15-378ae4d66413.json
	Sachiko982_Gulgowski816_89ba9a77-7aed-6cb8-6795-fb21f0ec237c.json
	Sandee884_Hodkiewicz467_15201e77-7e36-0667-73bc-013783e57649.json
	Sandy901_Conn188_f38fe4a9-1634-144c-0147-53c0300c1561.json
	Santiago500_Barton704_686e4b2e-1f8d-7018-c335-1604a300121b.json
	Zachery872_Wyman904_37d57af4-d27f-fb97-9b5c-a1090f5a57b7.json
	Zane918_Schoen8_4995ca99-2ab9-3b18-a56e-c33d29e53af0.json

	User@User-PC MINGW64 ~/git/exa-data-eng-assessment/data (main)
	$

Good news is I now have the json files on my hard disk. 
I assume this is okay as far as the assessment is concerned. 
So now we can loop through the list of files locally. 
This will require os and os.path
os.listdir works fine. 

Had a go at getting it to print out the contents of each file to the IDLE command line. 
Good news is that it is printable and therefore parsable ASCII text not binary. 
Bad news is each file is BIG! In notepad the first file is 45,000 lines long. 
I believe each file represents one patient. That means a LOT of info for each patient. 
Although there are some understandable fields with corresponding values, I have 
I may have to rethink this.
Are there existing JSON parsers out there? 
If not I may restrict my program to looking for the simplest and most important patient details. 

Found something that could be useful at https://www.w3schools.com/python/python_json.asp

Monday 25/04/22
================
Tried commiting first version and got reminded by git to give my username and email. Not a problem. 

	User@User-PC MINGW64 ~/git/exa-data-eng-assessment (main)
	$ git commit -m "Emis Assessment - first attempt to open and look at files"
	Author identity unknown

	*** Please tell me who you are.

	Run

	  git config --global user.email "you@example.com"
	  git config --global user.name "Your Name"

	to set your account's default identity.
	Omit --global to set the identity only in this repository.

	fatal: unable to auto-detect email address (got 'User@User-PC.(none)')

	User@User-PC MINGW64 ~/git/exa-data-eng-assessment (main)
	$ git config --global user.name "johnleeper"

	User@User-PC MINGW64 ~/git/exa-data-eng-assessment (main)
	$ git config --global user.email "johnleeper73@gmail.com"

	User@User-PC MINGW64 ~/git/exa-data-eng-assessment (main)
	$

git does not like my attempts to push:

	User@User-PC MINGW64 ~/git/exa-data-eng-assessment (main)
	$ git push
	remote: Permission to emisgroup/exa-data-eng-assessment.git denied to johnleeper.
	fatal: unable to access 'https://github.com/emisgroup/exa-data-eng-assessment.git/': The requested URL returned error: 403

Now trying some suggestions from stack overflow to change from HTTPS to SSH
 

	User@User-PC MINGW64 ~/git/exa-data-eng-assessment (main)
	$ git remote set-url origin git@github.com:johnleeper/emisgroup/exa-data-eng-assessment.git

	User@User-PC MINGW64 ~/git/exa-data-eng-assessment (main)
	$ git push
	The authenticity of host 'github.com (140.82.121.3)' can't be established.
	ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU.
	This key is not known by any other names
	Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
	Warning: Permanently added 'github.com' (ED25519) to the list of known hosts.
	git@github.com: Permission denied (publickey).
	fatal: Could not read from remote repository.

	Please make sure you have the correct access rights
	and the repository exists.

	User@User-PC MINGW64 ~/git/exa-data-eng-assessment (main)
	$ git remote -v
	origin  git@github.com:johnleeper/emisgroup/exa-data-eng-assessment.git (fetch)
	origin  git@github.com:johnleeper/emisgroup/exa-data-eng-assessment.git (push)

	User@User-PC MINGW64 ~/git/exa-data-eng-assessment (main)

So still not working but I have a diferent error message, which could be considered progress.

I have found a way around this that they would not approve of at Apak. 
I can drag and drop files from Windows folder explorer into the GitHub web page for the repository
https://github.com/johnleeper/EmisAssessment/upload
This completely circumvents the Git bash application. 